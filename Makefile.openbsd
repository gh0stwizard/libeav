CFLAGS = -O2 -Wall -Wextra -std=c99 -pedantic -fPIC

PKG_CONFIG ?= pkg-config
DESTDIR ?= /usr/local
INSTALL ?= install
PERL ?= perl
SED ?= sed
RM ?= rm -rf


.ifndef RFC6531_FOLLOW_RFC5322
RFC6531_FOLLOW_RFC5322 = OFF
.endif

.ifndef RFC6531_FOLLOW_RFC20
RFC6531_FOLLOW_RFC20 = OFF
.endif


BINDIR ?= $(DESTDIR)/bin
LIBDIR ?= $(DESTDIR)/lib
INCLUDEDIR ?= $(DESTDIR)/include
DATAROOTDIR ?= $(DESTDIR)/share
MANDIR ?= $(DATAROOTDIR)/man

MAJOR_VERSION = 0
MINOR_VERSION = 2
PATCH_VERSION = 2
VERSION = $(MAJOR_VERSION).$(MINOR_VERSION).$(PATCH_VERSION)

DLL_EXT ?= so
LIB_EXT ?= a
DLL_TARGET = libeav.$(DLL_EXT)
LIB_TARGET = libeav.$(LIB_EXT)
BIN_TARGET = eav
BIN_TARGET_STATIC = eav.static

TARGETS = $(BIN_TARGET) $(DLL_TARGET) $(LIB_TARGET)
bin_SOURCES != ls bin/*.c
bin_OBJECTS = ${bin_SOURCES:.c=.o}
SOURCES != ls src/*.c
OBJECTS = ${SOURCES:.c=.o}

#----------------------------------------------------------#

.ifdef FORCE_IDN
.if ${FORCE_IDN} == "idnkit"
#.warning > Force using idnkit
WITH_IDN = idnkit
IDNKIT_DIR ?= /usr/local
DEFS = -DHAVE_IDNKIT -I${IDNKIT_DIR}/include
LIBS = -L${IDNKIT_DIR}/lib -lidnkit
LIBS_STATIC = -L$(IDNKIT_DIR)/lib -lidnkit
PARTIAL != ls partial/idnkit/*.c
OBJECTS += ${PARTIAL:.c=.o}
.elif ${FORCE_IDN} == "idn2"
#.warning > Force using libidn2
WITH_IDN = idn2
idn_cflags != ${PKG_CONFIG} --cflags libidn2
DEFS = -DHAVE_LIBIDN2 ${idn_cflags}
LIBS != ${PKG_CONFIG} --libs libidn2
LIBS_STATIC != ${PKG_CONFIG} --static --libs libidn2
PARTIAL != ls partial/idn2/*.c
OBJECTS += ${PARTIAL:.c=.o}
.elif ${FORCE_IDN} == "idn"
#.warning > Force using libidn
WITH_IDN = idn
idn_cflags != ${PKG_CONFIG} --cflags libidn
DEFS = -DHAVE_LIBIDN ${idn_cflags}
LIBS != ${PKG_CONFIG} --libs libidn
LIBS_STATIC != ${PKG_CONFIG} --static --libs libidn
PARTIAL != ls partial/idn/*.c
OBJECTS += ${PARTIAL:.c=.o}
.else
.error ! Unknown IDN library type
.endif
.else
#.warning > Looking for idn library ...
pc_idn2 != ${PKG_CONFIG} --exists 'libidn2 >= 2.0.3' && echo YES
pc_idn1 != ${PKG_CONFIG} --exists 'libidn' && echo YES
.if ${pc_idn2} == YES
#.warning > Found libidn2
WITH_IDN = idn2
idn_cflags != ${PKG_CONFIG} --cflags libidn2
DEFS = -DHAVE_LIBIDN2 ${idn_cflags}
LIBS != ${PKG_CONFIG} --libs libidn2
LIBS_STATIC != ${PKG_CONFIG} --static --libs libidn2
PARTIAL != ls partial/idn2/*.c
.elif ${pc_idn1} == YES
#.warning > Found libidn
WITH_IDN = idn
idn_cflags != ${PKG_CONFIG} --cflags libidn
DEFS = -DHAVE_LIBIDN ${idn_cflags}
LIBS != ${PKG_CONFIG} --libs libidn
LIBS_STATIC != ${PKG_CONFIG} --static --libs libidn
PARTIAL != ls partial/idn/*.c
.else
#.warning > Using idnkit by default
WITH_IDN = idnkit
IDNKIT_DIR ?= /usr/local
DEFS = -DHAVE_IDNKIT -I${IDNKIT_DIR}/include
LIBS = -L${IDNKIT_DIR}/lib -lidnkit
LIBS_STATIC = -L$(IDNKIT_DIR)/lib -lidnkit
PARTIAL != ls partial/idnkit/*.c
.endif
OBJECTS += ${PARTIAL:.c=.o}
.endif

.if ${RFC6531_FOLLOW_RFC5322} == ON
DEFS += -DRFC6531_FOLLOW_RFC5322
.endif

.if ${RFC6531_FOLLOW_RFC20} == ON
DEFS += -DRFC6531_FOLLOW_RFC20
.endif

#----------------------------------------------------------#

CPPFLAGS = -Iinclude -D_XOPEN_SOURCE=700 -D_BSD_SOURCE
CPPFLAGS += -D_NETBSD_SOURCE -D__BSD_VISIBLE
CPPFLAGS += -D_POSIX_C_SOURCE=200809
LIB_PATH != cd ${.CURDIR} && pwd

#----------------------------------------------------------#

all: libs app

debug: CFLAGS += -g -D_DEBUG
debug: all

libs: shared static
shared: ${DLL_TARGET}
static: ${LIB_TARGET}

app: ${BIN_TARGET}
app-static: ${BIN_TARGET_STATIC}

${BIN_TARGET}: ${DLL_TARGET}
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C bin

${BIN_TARGET_STATIC}: ${LIB_TARGET}
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_libs_static="${LIBS_STATIC}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C bin

${DLL_TARGET}: ${OBJECTS}
	# library -> shared linkage
	${CC} -shared ${LDFLAGS} -Iinclude -Wl,-soname,${DLL_TARGET} \
		-o ${DLL_TARGET} ${OBJECTS} ${LIBS}

${LIB_TARGET}: ${OBJECTS}
	# library -> static linkage
	${AR} rcs $@ ${OBJECTS}

.c.o:
	${CC} ${CPPFLAGS} ${DEFS} ${INCLUDES} ${CFLAGS} -I. -o $@ -c $<

check: ${DLL_TARGET}
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C tests check

man:
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C docs VERSION=${VERSION}

auto:
	${PERL} util/gentld.pl include/eav/auto_tld.h src/auto_tld.c \
		data/punycode.csv

tld-domains:
	${PERL} util/gen_utf8_pass_test.pl data/tld-domains.txt data/raw.csv

#----------------------------------------------------------#

.if ${WITH_IDN} == idnkit
pc_cflags = -I$${includedir} -DIDN_KIT
pc_requires_private = 
pc_libs_private = -L${IDNKIT_DIR}/lib -lidnkit
.else
pc_cflags = -I$${includedir}
pc_requires_private = lib${WITH_IDN}
pc_libs_private = 
.endif

libeav.pc: libeav.pc.in
	${SED} \
	-e 's,@version\@,$(VERSION),' \
	-e 's,@prefix\@,$(DESTDIR),g' \
	-e 's,@exec_prefix\@,$(DESTDIR),g' \
	-e 's,@includedir\@,$(INCLUDEDIR),g' \
	-e 's,@libdir\@,$(LIBDIR),g' \
	-e 's,@cflags\@,$(pc_cflags),g' \
	-e 's,@requires_private\@,$(pc_requires_private),g' \
	-e 's,@libs_private\@,$(pc_libs_private),g' \
	libeav.pc.in > $@

#----------------------------------------------------------#

clean: clean-tests clean-bin
	# cleanup
	${RM} ${DLL_TARGET} ${LIB_TARGET} ${OBJECTS} libeav.pc

clean-tests:
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C tests clean
	
clean-bin:
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C bin clean

strip: app
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C bin strip

strip-static: app-static
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_libs_static="${LIBS_STATIC}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	${MAKE} -f Makefile.openbsd -C bin strip-static

#----------------------------------------------------------#

install: install-bin install-libs install-man

install-bin: $(BIN_TARGET)
	env _defs="${DEFS}" \
	_libs="${LIBS}" \
	_pkg_config="${PKG_CONFIG}" \
	_install="${INSTALL}" \
	_idnkit_dir="${IDNKIT_DIR}" \
	_destdir="${DESTDIR}" \
	_objects="${OBJECTS}" \
	_libpath="${LIB_PATH}" \
	_withidn="${WITH_IDN}" \
	RFC6531_FOLLOW_RFC5322="${RFC6531_FOLLOW_RFC5322}" \
	RFC6531_FOLLOW_RFC20="${RFC6531_FOLLOW_RFC20}" \
	$(MAKE) -f Makefile.openbsd -C bin install DESTDIR=$(DESTDIR)

install-libs: install-shared install-static libeav.pc
	$(INSTALL) -d $(DATAROOTDIR)/pkgconfig
	$(INSTALL) -m 0644 libeav.pc $(DATAROOTDIR)/pkgconfig

install-shared: $(DLL_TARGET)
	# installing shared library
	$(INSTALL) -d $(LIBDIR)
	$(INSTALL) -d $(INCLUDEDIR)
	$(INSTALL) -m 0644 include/eav.h $(INCLUDEDIR)
	$(INSTALL) -m 0755 $(DLL_TARGET) $(LIBDIR)/$(DLL_TARGET).$(VERSION)
	cd $(LIBDIR) && \
	ln -snf $(DLL_TARGET).$(VERSION) $(DLL_TARGET).$(MAJOR_VERSION) && \
	ln -snf $(DLL_TARGET).$(VERSION) $(DLL_TARGET)

install-static: $(LIB_TARGET)
	# installing static library
	$(INSTALL) -d $(LIBDIR)
	$(INSTALL) -d $(INCLUDEDIR)
	$(INSTALL) -m 0644 include/eav.h $(INCLUDEDIR)
	$(INSTALL) -m 0644 $(LIB_TARGET) $(LIBDIR)

install-man:
	$(INSTALL) -d $(MANDIR)/man3
	$(INSTALL) -m 0644 docs/libeav.3.gz $(MANDIR)/man3

#----------------------------------------------------------#

.PHONY: all debug check clean docs install libs libeav.pc
